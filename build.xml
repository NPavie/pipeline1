<?xml version="1.0" encoding="utf-8"?>

<!-- http://ant.apache.org/manual -->
<project default="all">

	<property name="version" value="0_1_0"/>
	
	<!--project directories -->
	<!-- ${base.dir} should point to the DMFC project root directory.-->
	<property name="base.dir" value="."/>
	
	<property name="dmfc.src.dir" value="${base.dir}/src"/>
	<property name="build.dir" value="${base.dir}/bin"/>
	
	<property name="transformers.dir" value="${base.dir}/transformers"/>
	
	<property name="lib.dir" value="${base.dir}/lib"/>
	<property name="javadoc.dir" value="${base.dir}/doc/api"/>
	<property name="distribution.dir" value="${base.dir}/dist"/>
	<property name="deploy.dir" value="${distribution.dir}/deploy"/>
	
	<!-- Filesets definitions -->
	<patternset id="patternset.transformers">
		<include name="transformers/**/*.*"/>
		<exclude name="transformers/int_daisy_daisy2022Zed2005/**/*.*"/>
		<exclude name="transformers/int_daisy_exeTest/**/*.*"/>
		<exclude name="transformers/int_daisy_filesetRenamer/**/*.*"/>
		<exclude name="transformers/int_daisy_helloWorld/**/*.*"/>
		<exclude name="transformers/int_daisy_html2xhtml/**/*.*"/>
		<exclude name="transformers/int_daisy_xmlValidator/**/*.*"/>
		<exclude name="transformers/int_daisy_xsltTest/**/*.*"/>
		<exclude name="transformers/se_tpb_mixedContentNormalizer/**/*.*"/>
		<exclude name="transformers/se_tpb_pdtbCreator/**/*.*"/>	
		<exclude name="transformers/se_tpb_xmlValidator/**/*.*"/>	
	</patternset>
	
	<patternset id="patternset.util">
		<include name="org/daisy/util/**/*.*"/>
	</patternset>
	
	<patternset id="patternset.framework">
		<include name="**/*.*"/>
		<exclude name="org/daisy/util/**/*.*"/>
	</patternset>
	
	
	<path id="path.classpath">
		<dirset dir="${base.dir}">
			<include name="transformers"/>
			<include name="bin/org/daisy/util"/>
		</dirset>		
    </path>
	
	<path id="path.utilJars">
		<fileset dir="${base.dir}/lib" id="fileset.utilJars">
			<include name="batik-css.jar"/>
			<include name="batik-util.jar"/>
			<include name="chardet.jar"/>
			<include name="icu4j-3_6.jar"/>
			<include name="icu4j-charsets-3_6.jar"/>			
			<include name="jing.jar"/>
			<include name="jl1.0.jar"/>			
			<include name="stax-api-1.0.1.jar"/>
			<include name="sac.jar"/>
			<include name="saxon.jar"/>
			<include name="saxon8.jar"/>
			<include name="saxon8-dom.jar"/>
			<include name="wstx-lgpl-3.2.1.jar"/>
			<include name="tagsoup-1.1.3.jar"/>			
			<include name="xercesImpl.jar"/>
			<include name="xalan.jar"/>			
			<include name="jaudiotagger.jar"/>			
			<include name="ZedVal.jar"/>			
			<include name="commons-cli-1.0.jar"/>			
			<include name="serializer.jar"/>			
		</fileset>
	</path>
	
	<path id="path.combined">
		<path refid="path.classpath"/>
		<path refid="path.utilJars"/>
		<dirset dir="${base.dir}">
			<include name="src"/>
		</dirset>
	</path>
	
	<pathconvert property="property.manifest.jars"
	             pathsep=" ">
		<path refid="path.utilJars"/>
		<flattenmapper/>
	</pathconvert>
	
	<!-- general tasks -->
	<target name="resetDistributionDir">
		<delete dir="${distribution.dir}"/>
		<mkdir dir="${distribution.dir}"/>
	</target>
	
	<target name="createDistributionDir">
		<mkdir dir="${distribution.dir}"/>
	</target>
	
	<target name="removeClasses" if="${build.dir}"
			description="Cleans up old class files so that the new ones can be built.">
		<delete dir="${build.dir}/org">
			<fileset dir="${build.dir}" includes="**/*.class"/>
		</delete>
	</target>
	
	<target name="compile" description="Compiles all src classes" depends="removeClasses">
		<javac 	srcdir="${dmfc.src.dir}" 
				destdir="${build.dir}" 
				includes="**/*.java" 
				debug="true"
				/>
		<javac 	srcdir="${transformers.dir}" 
				destdir="${transformers.dir}" 
				includes="**/*.java" 
				debug="true"
				/>
	</target>
	
	<target name="all" description="Builds all binary packages" depends="buildCore, buildMisc, buildUtil, buildTransformers, buildTransformersPack"/>
	
	<!-- end of general tasks -->
	
	<!-- build the dmfc (non util) src zip dist -->
	<target name="buildSrcZip" 
			description="Creates a DMFC source zip (excluding org.daisy.util packages) in the distribution folder"
			depends="createDistributionDir">
		<zip zipfile="${distribution.dir}/org.daisy.dmfc-src.zip" >
			<fileset dir="${base.dir}">
				<include name="build.xml"/>
				<include name="dmfc.bat"/>
				<include name="dmfc.sh"/>
			</fileset>
			<fileset dir="${base.dir}">
				<include name="src/**/*.*"/>				
				<include name="resources/**/*.*"/>	
				<include name="doc/releasenotes/*.*"/>
				<include name="doc/narrator/*.*"/>
				<include name="doc/examples/scripts/*.*"/>
				<include name="licenses/**/*.*"/>
				<exclude name="**/CVS/**/*.*"/>
				<exclude name="src/org/daisy/util/**/*.*"/>
			</fileset>
			<fileset dir="${base.dir}">
				<patternset refid="patternset.transformers"/>
				<not>
					<filename name="transformers/**/*.class"/>
				</not>
				<not>
					<filename name="transformers/**/*.exe"/>
				</not>
			</fileset>
		</zip>
	</target>
	
	<!-- ================================= 
		  target: buildJavadoc
		 ================================= -->
	<target name="buildJavadoc" 
			description="Creates a dmfc_doc_${version}.zip with javadoc files in the distribution folder"
			depends="createDistributionDir">
		<javadoc destdir="${javadoc.dir}/util" 
			     classpathref="path.combined"
			     windowtitle="DAISY Utility Library API documentation">
			<fileset dir="${base.dir}/src">
				<patternset refid="patternset.util"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.util-docs.zip" >
			<fileset dir="${javadoc.dir}/util" includes="**"/>
		</zip>
		
		<javadoc destdir="${javadoc.dir}/framework" 
			     classpathref="path.combined"
			     windowtitle="DMFC Framework API documentation">
			<fileset dir="${base.dir}/src">
				<patternset refid="patternset.framework"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.dmfc-framework-docs.zip" >
			<fileset dir="${javadoc.dir}/framework" includes="**"/>
		</zip>
		
		<javadoc destdir="${javadoc.dir}/transformers" 
			     classpathref="path.combined"
		         windowtitle="DMFC Transformers API documentation">
			<fileset dir="${base.dir}">
				<patternset refid="patternset.transformers"/>
				<and>					
					<filename name="**/*.java"/>
				</and>
			</fileset>
		</javadoc>
		<zip zipfile="${distribution.dir}/org.daisy.dmfc-transformers-docs.zip" >
			<fileset dir="${javadoc.dir}/transformers" includes="**"/>
		</zip>
	</target>
	
	
	<!-- ================================= 
		  target: buildUtil
		  
		  Builds the org.daisy.util.jar utility library
		  into a separate JAR. The sources are built
		  into a zip archive.		  
	     ================================= -->
	<target name="buildUtil"
			description="Builds the util library in a separate JAR"
			depends="createDistributionDir">
		<delete file="${distribution.dir}/org.daisy.util.jar"/>
		<jar jarfile="${distribution.dir}/org.daisy.util.jar">
			<fileset dir="${base.dir}/bin">
				<patternset refid="patternset.util"/>
			</fileset>
			<manifest>
				<attribute name="Class-Path" value="${property.manifest.jars}"/>
			</manifest>
		</jar>
		<zip zipfile="${distribution.dir}/org.daisy.util-src.zip" >
			<fileset dir="${base.dir}/src">
				<patternset refid="patternset.util"/>
			</fileset>
		</zip>
	</target>
	
	
	<!-- ================================= 
	      target: buildTransformers
	      
	      Builds the jarable transformers into separate
	      JARs.
	     ================================= -->
	<target name="buildTransformers"
				description="Builds the jarable transformers">
		<mkdir dir="${distribution.dir}/transformers"/>
		
		<!-- int_daisy_validator -->
		<jar jarfile="${distribution.dir}/transformers/int_daisy_validator.jar">
			<fileset dir="${base.dir}/transformers">
				<include name="int_daisy_validator/**/*.*"/>
				<not>
					<filename name="**/*.java"/>
				</not>
			</fileset>
		</jar>		

		<!-- uk_rnib_dtbook2xhtml -->
		<jar jarfile="${distribution.dir}/transformers/uk_rnib_dtbook2xhtml.jar">
			<fileset dir="${base.dir}/transformers">
				<include name="uk_rnib_dtbook2xhtml/**/*.*"/>
				<not>
					<filename name="**/*.java"/>
				</not>
			</fileset>
		</jar>
						
	</target>
	
	
	<!-- ================================= 
          target: buildTransformersPack
          
          Creates a zip archive containing all the
          transformers that are not jarable.
         ================================= -->
    <target name="buildTransformersPack"
    		description="Builds the pack of unjarable transformers">
        <zip zipfile="${distribution.dir}/transformers.zip">
        	<fileset dir="${transformers.dir}">
        		<include name="**/*.*"/>
        		<exclude name="**/*.java"/>
        		<exclude name="*.jar"/> 
        		
        		<!-- Jarable... -->
        		<exclude name="int_daisy_validator/**/*.*"/>
        		<exclude name="uk_rnib_dtbook2xhtml/**/*.*"/>        		
        		
        		<!-- Undesired -->
        		<exclude name="int_daisy_daisy2022Zed2005/**/*.*"/>
				<exclude name="int_daisy_exeTest/**/*.*"/>
				<exclude name="int_daisy_filesetRenamer/**/*.*"/>
				<exclude name="int_daisy_helloWorld/**/*.*"/>
				<exclude name="int_daisy_html2xhtml/**/*.*"/>
				<exclude name="int_daisy_xmlValidator/**/*.*"/>
				<exclude name="int_daisy_xsltTest/**/*.*"/>
				<exclude name="se_tpb_mixedContentNormalizer/**/*.*"/>
				<exclude name="se_tpb_pdtbCreator/**/*.*"/>	
				<exclude name="se_tpb_xmlValidator/**/*.*"/>
			</fileset>
    	</zip>
    </target>
	
	
	<!-- ================================= 
	      target: buildCore
	      
	      Builds a jar file containing the pipeline core.
	     ================================= -->
	<target name="buildCore"
			description="Builds the core JAR">
		<jar jarfile="${distribution.dir}/pipeline.jar">
			<fileset dir="${base.dir}/bin">
				<include name="org/daisy/dmfc/**/*.*"/>
				<exclude name="**/*.java"/>
			</fileset>
			<manifest>
				<attribute name="Class-Path" value="lib/org.daisy.util.jar"/>
			</manifest>
		</jar>
	</target>
	
	
	<!-- ================================= 
          target: buildMisc
          
          Creates a zip file containing all other resources
          required to run the pipeline that don't fit inside
          another jar or zip.
         ================================= -->
    <target name="buildMisc" 
    		description="Builds any misc files">
        <zip zipfile="${distribution.dir}/misc.zip">
        	<fileset dir="${base.dir}/bin">
        		<include name="pipeline.properties"/>
        		<include name="logging.properties"/>
        	</fileset>
    	</zip>
    </target>

	
	
	<!-- ================================= 
	      target: deploy
	      
	      Test task to deploy the pipeline.
	     ================================= -->
	<target name="deploy"
			depends="buildCore, buildMisc, buildUtil, buildTransformers, buildTransformersPack">
		<delete>
			<fileset dir="${deploy.dir}">
			    <include name="**/*.*"/>
			</fileset>
		</delete>

		<mkdir dir="${deploy.dir}"/>
		<mkdir dir="${deploy.dir}/lib"/>
		<mkdir dir="${deploy.dir}/transformers"/>
		
		<copy file="${distribution.dir}/pipeline.jar" todir="${deploy.dir}"/>
		<copy file="${base.dir}/pipeline.sh" todir="${deploy.dir}"/>
		
		<copy todir="${deploy.dir}/lib">
			<fileset dir="${distribution.dir}">
				<include name="*.jar"/>
				<exclude name="pipeline.jar"/>
			</fileset>
			<fileset refid="fileset.utilJars"/>
		</copy>
		
		<copy todir="${deploy.dir}/transformers">
			<fileset dir="${distribution.dir}/transformers">
				<include name="*.jar"/>
			</fileset>
		</copy>
		
		<unzip src="${distribution.dir}/transformers.zip" dest="${deploy.dir}/transformers"/>
		
		<unzip src="${distribution.dir}/misc.zip" dest="${deploy.dir}"/>
	</target>
	
</project>