<?xml version="1.0" encoding="UTF-8"?>
<!--
	RelaxNG schema for version 2.0 task scripts in the Daisy Pipeline.
	For a tutorial on the script syntax, see Script Authoring for the Daisy Pipeline in /doc/script/
	Linus Ericson 2007
-->
<grammar 
	xmlns="http://relaxng.org/ns/structure/1.0" 
	xmlns:sch="http://www.ascc.net/xml/schematron"
	datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">

	<start>
		<ref name="taskScript"/>
	</start>

	<define name="taskScript">
		<element name="taskScript">
			<attribute name="version">
				<value>2.0</value>
			</attribute>
			<attribute name="name">
				<data type="normalizedString"/>
			</attribute>
			
			<ref name="details"/>
			<ref name="properties"/>
			<ref name="tasks"/>
		</element>
	</define>
	
	<define name="details">
		<element name="nicename"><text/></element>
		<element name="description"><text/></element>
	    <interleave>		
			<optional>
				<element name="documentation">
					<attribute name="uri">
			    		<!--  the uri is relative to the script XML document representation,
			    		and thus typically looks '../../doc/scripts/scriptdoc.html'
			    		depending on the subfolder depth of the script file inside the scripts folder
			    		 -->
						<data type="anyURI"/>
					</attribute>
				    <empty/>		
				</element>
			</optional>
			<optional>
				<element name="comment">
					<text/>				
				</element>
			</optional>			
		</interleave>
	</define>

	<define name="properties">
		<zeroOrMore>
			<choice>
				<element name="property">
					<attribute name="name">
						<data type="normalizedString"/>
					</attribute>
					<attribute name="value">
						<data type="normalizedString"/>
					</attribute>
				</element>
				<element name="parameter">
					<attribute name="name">
						<data type="normalizedString"/>
					</attribute>
					<attribute name="value">
						<data type="normalizedString"/>
					</attribute>
					<attribute name="required">
						<choice>
							<value>true</value>
							<value>false</value>
						</choice>
					</attribute>
					<element name="nicename">
						<data type="normalizedString"/>
					</element>
					<element name="description"><text/></element>
					<ref name="datatype"/>
				</element>
			</choice>
		</zeroOrMore>
	</define>
	
	<!-- ******************** DATATYPES ******************** -->
	
	<define name="datatype">
		<element name="datatype">
			<choice>
				<ref name="datatype.file"/>
				<ref name="datatype.directory"/>
				<ref name="datatype.boolean"/>
				<ref name="datatype.enum"/>
				<ref name="datatype.string"/>
				<ref name="datatype.integer"/>
			</choice>
		</element>
	</define>
	
	<define name="datatype.file">
		<element name="file">
			<attribute name="mime">
				<data type="normalizedString"/>
			</attribute>
			<attribute name="type">
				<choice>
					<value>input</value>
					<value>output</value>
				</choice>
			</attribute>
		</element>
	</define>
	
	<define name="datatype.directory">
		<element name="directory">
			<attribute name="type">
				<choice>
					<value>input</value>
					<value>output</value>
				</choice>
			</attribute>
		</element>
	</define>
	
	<define name="datatype.boolean">
		<element name="boolean">
			<optional>
				<attribute name="true">
					<data type="normalizedString"/>
				</attribute>
				<attribute name="false">
					<data type="normalizedString"/>
				</attribute>
			</optional>
		</element>
	</define>
	
	<define name="datatype.enum">
		<element name="enum">
			<oneOrMore>
				<element name="item">
					<attribute name="nicename">
						<data type="normalizedString"/>
					</attribute>
					<attribute name="value">
						<data type="normalizedString"/>
					</attribute>					
				</element>				
			</oneOrMore>
		</element>
	</define>
	
	<define name="datatype.string">
		<element name="string">
			<optional>
				<attribute name="regex">
					<data type="normalizedString"/>
				</attribute>
			</optional>
		</element>
	</define>
	
	<define name="datatype.integer">
		<element name="integer">
			<optional>
				<attribute name="min">
					<data type="integer"/>
				</attribute>
			</optional>
			<optional>
				<attribute name="max">
					<data type="integer"/>
				</attribute>
			</optional>
		</element>
	</define>
	
	
	<!-- ******************** TASKS ******************** -->
	
	<define name="tasks">
		<oneOrMore>
			<element name="task">				
				<attribute name="name">
					<data type="normalizedString"/>
				</attribute>
				<attribute name="interactive">
					<data type="boolean"/>
				</attribute>				
				<zeroOrMore>
					<element name="parameter">															
						<element name="name"><text/></element>
						<element name="value"><text/></element>
					</element>
				</zeroOrMore>
			</element>
		</oneOrMore>
	</define>
	
	
	<!-- ******************** SCHEMATRON TESTS ******************** -->
	
	<!-- Disallow the use of file datatypes with 
	     application/x-filesystemDirectory mime type -->
	<sch:pattern name="script_fileMime" id="script_fileMime">
	    <sch:rule context="file">
			<sch:report test="@mime='application/x-filesystemDirectory'">Use of 'application/x-filesystemDirectory' mime type not allowed in script 2.0 syntax. Use &lt;directory/&gt; instead.</sch:report>
		</sch:rule>
	</sch:pattern> 

</grammar>
