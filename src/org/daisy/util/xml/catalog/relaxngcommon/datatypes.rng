<?xml version="1.0" encoding="utf-8"?>
<grammar
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
  xmlns="http://relaxng.org/ns/structure/1.0"
  xmlns:sch="http://www.ascc.net/xml/schematron"
  xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
>

  <a:documentation>
    datatatypes.rng
    Last edit by: mgylling 2005-06-09
  </a:documentation>

  <define name="datatype.idrefs">
    <data type="IDREFS" datatypeLibrary="http://relaxng.org/ns/compatibility/datatypes/1.0"/>
  </define>

  <define name="datatype.idref">
    <data type="IDREF" datatypeLibrary="http://relaxng.org/ns/compatibility/datatypes/1.0"/>
  </define>

  <define name="datatype.id">
    <data type="ID" datatypeLibrary="http://relaxng.org/ns/compatibility/datatypes/1.0" />
  </define>

  <define name="datatype.rfc1766">
    <!-- this is in reality rfc3066; supercedes 1766 by this erratum: http://www.w3.org/XML/xml-V10-2e-errata#E11 -->
    <data type="language"/>
  </define>

  <define name="datatype.string">
    <data type="string"/>
  </define>

  <define name="datatype.romannumeral">
    <data type="string"/> 
    <!-- 
      TODO
      <data type="string"> 
      <param name="pattern">^(?i:(?=[MDCLXVI])((M{0,3})((C[DM])|(D?C{0,3}))?((X[LC])|(L?XX{0,2}))?((I[VX])|(V?(II{0,2}))|V)?))$</param>
      </data>
    -->        
  </define>

  <define name="datatype.integer">
    <data type="integer"/>
  </define>

  <define name="datatype.uri">
    <data type="anyURI"/>
  </define>
  
  <define name="datatype.uri.relative.smilwithfragment">
    <data type="string">
      <param name="pattern">.+\.[Ss][Mm][Ii][Ll]#.+</param>
    </data>
  </define>

  <define name="datatype.string.nondtbns">
    <data type="string">
      <a:documentation>when other meta elems in group must have other ns than dtb</a:documentation>      
      <param name="pattern">(([^d].{3})|(.[^t].{2})|(.{2}[^b].)|(.{3}[^:])).*|(.{1,3})</param>
    </data>
  </define>

  <define name="datatype.string.prodPrefix">
    <data type="string">
      <param name="pattern">prod:.*</param>
    </data>
  </define>

  <define name="datatype.mime">
    <data type="string"/>
  </define>

  <define name="datatype.iso8601">
    <a:documentation>[ISO8601] the syntax is YYYY[-MM[-DD]] with a mandatory 4-digit year, an optional 2-digit month, and, if the month is present, an optional 2-digit day of month.</a:documentation>
    <choice>
      <data type="date"/>
      <data type="gYearMonth"/>
      <data type="gYear"/>
    </choice>
  </define>

  <define name="datatype.iso8601.yyyyMmDd">
    <a:documentation>[ISO8601] subset: requires yyyy-mm-dd format</a:documentation>
    <data type="string">
      <!-- TODO improve -->
      <param name="pattern">[0-9]{4}-[0-9]{2}-[0-9]{2}</param>
    </data>
  </define>

  <define name="datatype.nonNegativeInteger">
    <data type="nonNegativeInteger"/>
  </define>

  <define name="datatype.string.charset">
    <data type="string"/>
  </define>

  <define name="datatype.string.identifier">
    <data type="string"/>
  </define>

  <define name="datatype.smilclock">
    <choice>
      <a:documentation>
        Below defined as a datatype as per
        http://www.w3.org/TR/smil20/smil-timing.html#Timing-ClockValueSyntax
        with additional restrictions as per Z39-86-2002.html#Clock
      </a:documentation>
      <data type="string">
        <a:documentation>Full-clock-val</a:documentation>
        <param name="pattern">(\s*)(npt=)?[0-9]+:[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(\s*)</param>
      </data>
      <data type="string">
       <a:documentation>Partial-clock-val</a:documentation>
       <param name="pattern">(\s*)(npt=)?[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(\s*)</param>
      </data>
      <data type="string">
       <a:documentation>Timecount-val</a:documentation>
       <param name="pattern">(\s*)(npt=)?[0-9]+(\.[0-9]+)?(h|min|s|ms)?(\s*)</param>
      </data>
    </choice>
  </define>

</grammar>