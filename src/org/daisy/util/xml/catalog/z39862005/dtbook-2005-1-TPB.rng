<?xml version="1.0" encoding="utf-8"?>
<grammar ns="http://www.daisy.org/z3986/2005/dtbook/"
		 xmlns="http://relaxng.org/ns/structure/1.0"
		 xmlns:sch="http://www.ascc.net/xml/schematron"
		 xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0">

  <sch:ns prefix="dtbk" uri="http://www.daisy.org/z3986/2005/dtbook/"/>


  <include href="../relaxngcommon/attributes.rng" />

  <start>
      <ref name="root"/>  
  </start>
  
  <define name="root">
    <element name="dtbook">
      <ref name="dtbook.attlist"/>
      <ref name="anyElement"/>
      <element name="book">
        <ref name="frontmatter"/>
        <!-- Rule 13: All books must have bodymatter -->
        <ref name="bodymatter"/>
        <optional>
          <ref name="rearmatter"/>
        </optional>
      </element>
    </element>
  </define>
  
  <define name="dtbook.attlist">
    <attribute name="version">
      <value>2005-1</value>
    </attribute>
    <ref name="i18n.attributes"/>
  </define>
  
  <define name="i18n.attributes">
    <ref name="attribute.xml.lang.optional"/>
    <ref name="attribute.dir.optional"/>
  </define>
  
  <define name="frontmatter">
    <!-- Rule 12: frontmatter starts with doctitle and docauthor -->
    <element name="frontmatter">
      <zeroOrMore>
        <attribute>	
          <anyName/>	  
        </attribute>
      </zeroOrMore>
      <ref name="doctitle"/>
      <zeroOrMore>
        <ref name="docauthor"/>
      </zeroOrMore>
  	  <zeroOrMore>
        <ref name="anyElement"/>
      </zeroOrMore>       	
    </element>
  </define>
  
  <define name="bodymatter">
    <element name="bodymatter">
      <zeroOrMore>
        <attribute>	
          <anyName/>	  
        </attribute>
      </zeroOrMore>
  	  <oneOrMore>
        <ref name="anyElement"/>
      </oneOrMore>       	
    </element>
  </define>
  
  <define name="rearmatter">
    <element name="rearmatter">
      <zeroOrMore>
        <attribute>	
          <anyName/>	  
        </attribute>
      </zeroOrMore>
  	  <oneOrMore>
        <ref name="anyElement"/>
      </oneOrMore>       	
    </element>
  </define>
  
  <define name="anyElement">
    <element>
      <anyName>
        <!-- Rule 18: Do not allow level, only levelX -->
        <!-- Rule 22: No cite elements -->
        <except>
          <name>level</name>
          <name>cite</name>
        </except>  
      </anyName>
      <zeroOrMore>
        <choice>
          <attribute>	
            <anyName/>	
          </attribute>
          <text/>
          <ref name="anyElement"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  
  <define name="doctitle">
    <element name="doctitle">
      <zeroOrMore>
        <attribute>	
          <anyName/>	  
        </attribute>
      </zeroOrMore>
      <interleave>
        <zeroOrMore> 
          <text/>              
        </zeroOrMore>
        <zeroOrMore>
          <ref name="anyElement"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>


  <define name="docauthor">
    <element name="docauthor">
      <zeroOrMore>
        <attribute>	
          <anyName/>	  
        </attribute>
      </zeroOrMore>
      <text/>
    </element>
  </define>  


  <!-- Rule 8: Only allow pagenum[@front] in frontmatter -->
  <sch:pattern name="dtbook_TPB_pageFront" id="dtbook_TPB_pageFront">
  	<sch:rule context="dtbk:pagenum[@page='front']">
  		<sch:assert test="ancestor::dtbk:frontmatter">[tpb08]&lt;pagenum page="front"/&gt; may only occur in &lt;frontmatter/&gt;</sch:assert>
  	</sch:rule>  	
  </sch:pattern>
    
  <!-- Rule 9: Disallow empty elements (with a few exceptions) -->
  <sch:pattern name="dtbook_TPB_emptyElements" id="dtbook_TPB_emptyElements">
  	<sch:rule context="dtbk:*">
  		<sch:report test="normalize-space(.)='' and not(*) and not(self::dtbk:img or self::dtbk:br or self::dtbk:meta or self::dtbk:link or self::dtbk:col)">[tpb09] Element may not be empty</sch:report>
  	</sch:rule>  	
  </sch:pattern>
  
  <!-- Rule 16: Targets of internal links must exist -->
  <sch:pattern name="dtbook_TPB_internalLinks" id="dtbook_TPB_internalLinks">
  	<sch:rule context="dtbk:a[starts-with(@href, '#')]">
  		<sch:assert test="count(//dtbk:*[@id=substring(current()/@href, 2)])=1">[tpb16] Targets of internal links must exist</sch:assert>
  	</sch:rule>  	
  </sch:pattern>  
  
  <!-- Rule 21: No nested tables -->
  <sch:pattern name="dtbook_TPB_nestedTables" id="dtbook_TPB_nestedTables">
  	<sch:rule context="dtbk:table">
  		<sch:report test="ancestor::dtbk:table">[tpb21] Nested tables are not allowed</sch:report>
  	</sch:rule>  	
  </sch:pattern> 
  
  <!-- Rule 23: Increasing pagenum[@page='normal'] values -->
  <sch:pattern name="dtbook_TPB_pagenumIncrease" id="dtbook_TPB_pagenumIncrease">
  	<sch:rule context="dtbk:pagenum[@page='normal' and preceding::dtbk:pagenum[@page='normal']]">
  		<sch:assert test="number(current()) > number(preceding::dtbk:pagenum[@page='normal' and position()=1])">[tpb23] pagenum[@page='normal'] values must increase</sch:assert>
  	</sch:rule>  	
  </sch:pattern>
  
  <!-- Rule 24: Values of pagenum[@page='front'] must be unique -->
  <sch:pattern name="dtbook_TPB_pagenumUnique" id="dtbook_TPB_pagenumUnique">
  	<sch:rule context="dtbk:pagenum[@page='front']">
  		<sch:assert test="count(//dtbk:pagenum[@page='front' and string(.)=string(current())])=1">[tpb24] pagenum[@page='front'] values must be unique</sch:assert>
  	</sch:rule>  	
  </sch:pattern>
  
  <!-- Rule 26: Each note must have a noteref -->
  <sch:pattern name="dtbook_TPB_noteNoteref" id="dtbook_TPB_noteNoteref">
  	<sch:rule context="dtbk:note">
  		<sch:assert test="count(//dtbk:noteref[@idref=current()/@id])>=1">[tpb26] Each note must have at least one noteref</sch:assert>
  	</sch:rule>  	
  </sch:pattern>
  
  <!-- Rule 27: Each annotation must have an annoref -->
  <sch:pattern name="dtbook_TPB_annotationAnnoref" id="dtbook_TPB_annotationAnnoref">
  	<sch:rule context="dtbk:annotation">
  		<sch:assert test="count(//dtbk:annoref[@idref=current()/@id])>=1">[tpb27] Each annotation must have at least one annoref</sch:assert>
  	</sch:rule>  	
  </sch:pattern>  
  
  <sch:pattern name="dtbook_TPB_IdValue" id="dtbook_TPB_IdValue">
  	<sch:rule context="*[@id]">
  		<sch:assert test="normalize-space(@id)=@id">ID attributes may not contain whitespace</sch:assert>
  	</sch:rule>
  </sch:pattern>
  
</grammar>